name: API Automation Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment (dev, qa, stage, prod)'
        required: true
        default: 'dev'

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      # Default if workflow_dispatch is not used
      TARGET_ENV: dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set TARGET_ENV from workflow_dispatch if provided
        run: |
          if [ -n "${{ github.event.inputs.environment }}" ]; then
            echo "TARGET_ENV=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          fi

      - name: Print selected environment
        run: echo "Selected environment: $TARGET_ENV"

      - name: Set BASE_URL for the environment
        run: |
          if [ "$TARGET_ENV" = "prod" ]; then
            echo "BASE_URL=https://bookstore.yourdomain.com" >> $GITHUB_ENV
          elif [ "$TARGET_ENV" = "stage" ]; then
            echo "BASE_URL=http://stage.bookstore.internal" >> $GITHUB_ENV
          elif [ "$TARGET_ENV" = "qa" ]; then
            echo "BASE_URL=http://qa.bookstore.internal" >> $GITHUB_ENV
          else
            echo "BASE_URL=http://127.0.0.1:8000" >> $GITHUB_ENV
          fi

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Docker build only if environment is dev
      - name: Build FastAPI Docker image (dev only)
        if: env.TARGET_ENV == 'dev'
        run: docker build -t bookstore-api ./bookstore

      - name: Run FastAPI Docker container (dev only)
        if: env.TARGET_ENV == 'dev'
        run: docker run -d -p 8000:8000 --name bookstore-api bookstore-api

      - name: Wait for FastAPI to be ready (dev only)
        if: env.TARGET_ENV == 'dev'
        run: |
          echo "Waiting for API to be ready..."
          sleep 5
          for i in {1..10}; do
            if curl -s $BASE_URL/health >/dev/null; then
              echo "API is up!"
              exit 0
            fi
            echo "API not up yet... retrying in 3s"
            sleep 3
          done
          echo "API did not become ready in time"
          exit 1

      - name: Run Rest Assured tests
        run: mvn clean test
        env:
          BASE_URL: ${{ env.BASE_URL }}

      - name: Check if Allure results were generated
        run: |
          if [ -d target/allure-results ]; then
            echo "Allure results found"
          else
            echo "No Allure results directory"
          fi

      - name: Generate Allure report
        run: mvn io.qameta.allure:allure-maven:report

      - name: Upload Allure report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: target/allure-report

      - name: Upload TestNG reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: target/surefire-reports

      - name: Stop and remove Docker container (dev only)
        if: always() && env.TARGET_ENV == 'dev'
        run: |
          docker stop bookstore-api || true
          docker rm bookstore-api || true
