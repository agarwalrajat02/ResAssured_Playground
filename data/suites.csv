"DESCRIPTION","DURATION IN MS","NAME","PARENT SUITE","START TIME","STATUS","STOP TIME","SUB SUITE","SUITE","TEST CLASS","TEST METHOD"
"Verify book creation fails with invalid 'published_year'","14","shouldFailWithInvalidPublishedYear","MySuite","Fri Aug 08 10:17:40 UTC 2025","passed","Fri Aug 08 10:17:40 UTC 2025","com.pacakge.rest_assured_framework.CreateBookApi","Integration","com.pacakge.rest_assured_framework.CreateBookApi","shouldFailWithInvalidPublishedYear"
"Verify that updating a book with invalid token returns 401","12","shouldFailWithInvalidToken","MySuite","Fri Aug 08 10:17:40 UTC 2025","failed","Fri Aug 08 10:17:40 UTC 2025","com.pacakge.rest_assured_framework.UpdateBookApi","Integration","com.pacakge.rest_assured_framework.UpdateBookApi","shouldFailWithInvalidToken"
"This test checks if the /health endpoint returns HTTP status 200.","1052","Verify GET /health returns 200","MySuite","Fri Aug 08 10:17:35 UTC 2025","passed","Fri Aug 08 10:17:36 UTC 2025","com.pacakge.rest_assured_framework.HealthCheckAPI","Integration","com.pacakge.rest_assured_framework.HealthCheckAPI","shouldReturnStatus200"
"Verify that a book can be updated successfully with valid data","12","shouldUpdateBookSuccessfully","MySuite","Fri Aug 08 10:17:40 UTC 2025","failed","Fri Aug 08 10:17:40 UTC 2025","com.pacakge.rest_assured_framework.UpdateBookApi","Integration","com.pacakge.rest_assured_framework.UpdateBookApi","shouldUpdateBookSuccessfully"
"Verify that updating a book with invalid ID returns 404","11","shouldFailForInvalidBookId","MySuite","Fri Aug 08 10:17:40 UTC 2025","passed","Fri Aug 08 10:17:40 UTC 2025","com.pacakge.rest_assured_framework.UpdateBookApi","Integration","com.pacakge.rest_assured_framework.UpdateBookApi","shouldFailForInvalidBookId"
"Verify deleting a book without authorization fails","18","shouldFailWithoutAuthToken","MySuite","Fri Aug 08 10:17:40 UTC 2025","passed","Fri Aug 08 10:17:40 UTC 2025","com.pacakge.rest_assured_framework.DeleteBookApi","Integration","com.pacakge.rest_assured_framework.DeleteBookApi","shouldFailWithoutAuthToken"
"Verify book creation fails when required field 'name' is missing","13","shouldFailWhenNameIsMissing","MySuite","Fri Aug 08 10:17:40 UTC 2025","passed","Fri Aug 08 10:17:40 UTC 2025","com.pacakge.rest_assured_framework.CreateBookApi","Integration","com.pacakge.rest_assured_framework.CreateBookApi","shouldFailWhenNameIsMissing"
"Verify book creation fails with empty payload","14","shouldFailWithEmptyPayload","MySuite","Fri Aug 08 10:17:40 UTC 2025","passed","Fri Aug 08 10:17:40 UTC 2025","com.pacakge.rest_assured_framework.CreateBookApi","Integration","com.pacakge.rest_assured_framework.CreateBookApi","shouldFailWithEmptyPayload"
"Checks that signup with a password shorter than the minimum allowed length returns HTTP 400 with 'password is too short'.","282","Verify signup fails when password is shorter than required length.","MySuite","Fri Aug 08 10:17:39 UTC 2025","failed","Fri Aug 08 10:17:39 UTC 2025","com.pacakge.rest_assured_framework.SignUpAPI","Integration","com.pacakge.rest_assured_framework.SignUpAPI","testSignupWithShortPassword"
"Verify that a book can be fetched successfully by valid ID","73","shouldGetBookByIdSuccessfully","MySuite","Fri Aug 08 10:17:40 UTC 2025","passed","Fri Aug 08 10:17:40 UTC 2025","com.pacakge.rest_assured_framework.GetBookByIdApi","Integration","com.pacakge.rest_assured_framework.GetBookByIdApi","shouldGetBookByIdSuccessfully"
"Ensures that attempting to sign up with an already registered email returns HTTP 400 with 'Email already registered' message.","315","Verify signup fails for an already registered email.","MySuite","Fri Aug 08 10:17:38 UTC 2025","passed","Fri Aug 08 10:17:38 UTC 2025","com.pacakge.rest_assured_framework.SignUpAPI","Integration","com.pacakge.rest_assured_framework.SignUpAPI","testSignupWithExistingEmail"
"Verify fetching book with an invalid ID returns 404","11","shouldReturnNotFoundForInvalidId","MySuite","Fri Aug 08 10:17:40 UTC 2025","passed","Fri Aug 08 10:17:40 UTC 2025","com.pacakge.rest_assured_framework.GetBookByIdApi","Integration","com.pacakge.rest_assured_framework.GetBookByIdApi","shouldReturnNotFoundForInvalidId"
"Verify that a book can be created with valid data","35","shouldCreateBookSuccessfully","MySuite","Fri Aug 08 10:17:40 UTC 2025","passed","Fri Aug 08 10:17:40 UTC 2025","com.pacakge.rest_assured_framework.CreateBookApi","Integration","com.pacakge.rest_assured_framework.CreateBookApi","shouldCreateBookSuccessfully"
"Verify fetching book with a non-numeric ID returns 400","10","shouldReturnBadRequestForNonNumericId","MySuite","Fri Aug 08 10:17:40 UTC 2025","failed","Fri Aug 08 10:17:40 UTC 2025","com.pacakge.rest_assured_framework.GetBookByIdApi","Integration","com.pacakge.rest_assured_framework.GetBookByIdApi","shouldReturnBadRequestForNonNumericId"
"Validates that sending an empty request body returns HTTP 400 with 'Input payload validation failed'.","24","Verify signup fails with an empty request payload.","MySuite","Fri Aug 08 10:17:39 UTC 2025","failed","Fri Aug 08 10:17:39 UTC 2025","com.pacakge.rest_assured_framework.SignUpAPI","Integration","com.pacakge.rest_assured_framework.SignUpAPI","testSignupWithEmptyPayload"
"Verify that accessing the Get All Books API with an invalid token returns 403 Forbidden","21","shouldFailWithInvalidToken","MySuite","Fri Aug 08 10:17:40 UTC 2025","passed","Fri Aug 08 10:17:40 UTC 2025","com.pacakge.rest_assured_framework.GetAllBooksApi","Integration","com.pacakge.rest_assured_framework.GetAllBooksApi","shouldFailWithInvalidToken"
"Checks that signup succeeds with a valid email and a complex password containing uppercase, lowercase, numbers, and special characters.","309","Verify signup works with a complex password containing special characters.","MySuite","Fri Aug 08 10:17:38 UTC 2025","passed","Fri Aug 08 10:17:38 UTC 2025","com.pacakge.rest_assured_framework.SignUpAPI","Integration","com.pacakge.rest_assured_framework.SignUpAPI","testSignupWithComplexPassword"
"Verify book creation fails with duplicate 'id'","29","shouldFailWithDuplicateId","MySuite","Fri Aug 08 10:17:40 UTC 2025","passed","Fri Aug 08 10:17:40 UTC 2025","com.pacakge.rest_assured_framework.CreateBookApi","Integration","com.pacakge.rest_assured_framework.CreateBookApi","shouldFailWithDuplicateId"
"This test checks if the 'status' key is present in the JSON response.","154","Verify /health JSON contains 'status' key","MySuite","Fri Aug 08 10:17:36 UTC 2025","passed","Fri Aug 08 10:17:36 UTC 2025","com.pacakge.rest_assured_framework.HealthCheckAPI","Integration","com.pacakge.rest_assured_framework.HealthCheckAPI","shouldContainStatusKey"
"This test checks if the 'status' value returned by /health is 'up'.","631","Verify status value is 'up'","MySuite","Fri Aug 08 10:17:36 UTC 2025","passed","Fri Aug 08 10:17:37 UTC 2025","com.pacakge.rest_assured_framework.HealthCheckAPI","Integration","com.pacakge.rest_assured_framework.HealthCheckAPI","shouldReturnStatusValueUp"
"Verify that updating a book without token returns 401","9","shouldFailWithoutToken","MySuite","Fri Aug 08 10:17:40 UTC 2025","failed","Fri Aug 08 10:17:40 UTC 2025","com.pacakge.rest_assured_framework.UpdateBookApi","Integration","com.pacakge.rest_assured_framework.UpdateBookApi","shouldFailWithoutToken"
"Verify that the Get All Books API returns a valid list of books","334","shouldReturnAllBooksSuccessfully","MySuite","Fri Aug 08 10:17:39 UTC 2025","passed","Fri Aug 08 10:17:40 UTC 2025","com.pacakge.rest_assured_framework.GetAllBooksApi","Integration","com.pacakge.rest_assured_framework.GetAllBooksApi","shouldReturnAllBooksSuccessfully"
"Ensures that signup without the email field returns HTTP 400 with 'required' field message.","297","Verify signup fails when email is missing.","MySuite","Fri Aug 08 10:17:39 UTC 2025","failed","Fri Aug 08 10:17:39 UTC 2025","com.pacakge.rest_assured_framework.SignUpAPI","Integration","com.pacakge.rest_assured_framework.SignUpAPI","testSignupWithoutEmail"
"Verify 404 Not Found for invalid endpoint","9","shouldReturn404ForInvalidEndpoint","MySuite","Fri Aug 08 10:17:40 UTC 2025","passed","Fri Aug 08 10:17:40 UTC 2025","com.pacakge.rest_assured_framework.GetAllBooksApi","Integration","com.pacakge.rest_assured_framework.GetAllBooksApi","shouldReturn404ForInvalidEndpoint"
"This test checks if POST requests to /health are not allowed (405).","49","Verify POST on /health returns 405","MySuite","Fri Aug 08 10:17:37 UTC 2025","passed","Fri Aug 08 10:17:37 UTC 2025","com.pacakge.rest_assured_framework.HealthCheckAPI","Integration","com.pacakge.rest_assured_framework.HealthCheckAPI","shouldNotAllowPostMethod"
"Validates that providing an empty password during signup returns HTTP 400 with 'required' field message.","295","Verify signup fails when password is empty.","MySuite","Fri Aug 08 10:17:38 UTC 2025","failed","Fri Aug 08 10:17:39 UTC 2025","com.pacakge.rest_assured_framework.SignUpAPI","Integration","com.pacakge.rest_assured_framework.SignUpAPI","testSignupWithEmptyPassword"
"Ensures that signup without the password field returns HTTP 400 with 'required' field message.","18","Verify signup fails when password is missing.","MySuite","Fri Aug 08 10:17:39 UTC 2025","failed","Fri Aug 08 10:17:39 UTC 2025","com.pacakge.rest_assured_framework.SignUpAPI","Integration","com.pacakge.rest_assured_framework.SignUpAPI","testSignupWithoutPassword"
"This test checks if an invalid health endpoint returns HTTP status 404.","13","Verify GET /healthz returns 404","MySuite","Fri Aug 08 10:17:37 UTC 2025","passed","Fri Aug 08 10:17:37 UTC 2025","com.pacakge.rest_assured_framework.HealthCheckAPI","Integration","com.pacakge.rest_assured_framework.HealthCheckAPI","shouldReturn404ForInvalidEndpoint"
"Verify deleting a book with a non-existent ID fails","11","shouldFailWithInvalidBookId","MySuite","Fri Aug 08 10:17:40 UTC 2025","passed","Fri Aug 08 10:17:40 UTC 2025","com.pacakge.rest_assured_framework.DeleteBookApi","Integration","com.pacakge.rest_assured_framework.DeleteBookApi","shouldFailWithInvalidBookId"
"Verify that updating a book without required field returns 400","11","shouldFailWhenRequiredFieldMissing","MySuite","Fri Aug 08 10:17:40 UTC 2025","failed","Fri Aug 08 10:17:40 UTC 2025","com.pacakge.rest_assured_framework.UpdateBookApi","Integration","com.pacakge.rest_assured_framework.UpdateBookApi","shouldFailWhenRequiredFieldMissing"
"Validates that providing a unique email and valid password returns HTTP 200 with 'user created successfully'.","373","Verify that a new user can successfully sign up with valid email and password.","MySuite","Fri Aug 08 10:17:37 UTC 2025","passed","Fri Aug 08 10:17:38 UTC 2025","com.pacakge.rest_assured_framework.SignUpAPI","Integration","com.pacakge.rest_assured_framework.SignUpAPI","testSignupSuccess"
"Ensures that signup with an excessively long email returns HTTP 400 with an email validation error.","27","Verify signup fails when email exceeds maximum allowed length.","MySuite","Fri Aug 08 10:17:39 UTC 2025","passed","Fri Aug 08 10:17:39 UTC 2025","com.pacakge.rest_assured_framework.SignUpAPI","Integration","com.pacakge.rest_assured_framework.SignUpAPI","testSignupWithVeryLongEmail"
"Checks that submitting signup request with an empty email returns HTTP 400 with an email validation error.","29","Verify signup fails when email is empty.","MySuite","Fri Aug 08 10:17:38 UTC 2025","passed","Fri Aug 08 10:17:38 UTC 2025","com.pacakge.rest_assured_framework.SignUpAPI","Integration","com.pacakge.rest_assured_framework.SignUpAPI","testSignupWithEmptyEmail"
"Verify fetching book without token returns 401","36","shouldReturnUnauthorizedWhenTokenIsMissing","MySuite","Fri Aug 08 10:17:40 UTC 2025","failed","Fri Aug 08 10:17:40 UTC 2025","com.pacakge.rest_assured_framework.GetBookByIdApi","Integration","com.pacakge.rest_assured_framework.GetBookByIdApi","shouldReturnUnauthorizedWhenTokenIsMissing"
"Verify structure of each book object returned by the API","114","shouldHaveExpectedFieldsInBooks","MySuite","Fri Aug 08 10:17:40 UTC 2025","passed","Fri Aug 08 10:17:40 UTC 2025","com.pacakge.rest_assured_framework.GetAllBooksApi","Integration","com.pacakge.rest_assured_framework.GetAllBooksApi","shouldHaveExpectedFieldsInBooks"
"Verify that a book can be deleted with a valid ID","34","shouldDeleteBookSuccessfully","MySuite","Fri Aug 08 10:17:40 UTC 2025","passed","Fri Aug 08 10:17:40 UTC 2025","com.pacakge.rest_assured_framework.DeleteBookApi","Integration","com.pacakge.rest_assured_framework.DeleteBookApi","shouldDeleteBookSuccessfully"
"Ensures that signup with an invalid email format returns HTTP 400 with an email validation error.","31","Verify signup fails for invalid email format.","MySuite","Fri Aug 08 10:17:38 UTC 2025","passed","Fri Aug 08 10:17:38 UTC 2025","com.pacakge.rest_assured_framework.SignUpAPI","Integration","com.pacakge.rest_assured_framework.SignUpAPI","testSignupWithInvalidEmailFormat"
"Ensures that signup request without a password returns HTTP 400 with 'required' field message.","22","Verify signup fails when password is null.","MySuite","Fri Aug 08 10:17:39 UTC 2025","failed","Fri Aug 08 10:17:39 UTC 2025","com.pacakge.rest_assured_framework.SignUpAPI","Integration","com.pacakge.rest_assured_framework.SignUpAPI","testSignupWithNullPassword"
"Verify that accessing the Get All Books API without a token returns 403 Forbidden","12","shouldFailWithoutAuthToken","MySuite","Fri Aug 08 10:17:40 UTC 2025","passed","Fri Aug 08 10:17:40 UTC 2025","com.pacakge.rest_assured_framework.GetAllBooksApi","Integration","com.pacakge.rest_assured_framework.GetAllBooksApi","shouldFailWithoutAuthToken"
"Checks that signup with an email containing spaces returns HTTP 400 with an email validation error.","27","Verify signup fails when email contains spaces.","MySuite","Fri Aug 08 10:17:39 UTC 2025","passed","Fri Aug 08 10:17:39 UTC 2025","com.pacakge.rest_assured_framework.SignUpAPI","Integration","com.pacakge.rest_assured_framework.SignUpAPI","testSignupWithEmailContainingSpaces"
